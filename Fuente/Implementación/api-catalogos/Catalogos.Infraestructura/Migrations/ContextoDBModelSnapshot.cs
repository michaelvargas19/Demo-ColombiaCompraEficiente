// <auto-generated />
using System;
using Catalogos.Infraestructura.SettingsDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Catalogos.Infraestructura.Migrations
{
    [DbContext(typeof(ContextoDB))]
    partial class ContextoDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Catalogos.Infraestructura.Entities.Catalogo", b =>
                {
                    b.Property<int>("idCatalogo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Calificacion")
                        .HasColumnType("float");

                    b.Property<string>("CodigoCatalogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idUsuarioCrea")
                        .HasColumnType("int");

                    b.HasKey("idCatalogo");

                    b.HasIndex("idUsuarioCrea");

                    b.ToTable("catCatalogos");
                });

            modelBuilder.Entity("Catalogos.Infraestructura.Entities.Descuento", b =>
                {
                    b.Property<int>("idDescuento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Porcentaje")
                        .HasColumnType("float");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.HasKey("idDescuento");

                    b.HasIndex("idProducto")
                        .IsUnique();

                    b.ToTable("catDescuentosXProducto");
                });

            modelBuilder.Entity("Catalogos.Infraestructura.Entities.MultimediaCatalogo", b =>
                {
                    b.Property<int>("idMultimedia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int>("idCatalogo")
                        .HasColumnType("int");

                    b.Property<int>("idUsuarioCrea")
                        .HasColumnType("int");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idMultimedia");

                    b.HasIndex("idCatalogo");

                    b.HasIndex("idUsuarioCrea");

                    b.ToTable("catMultimediaXCatalogo");
                });

            modelBuilder.Entity("Catalogos.Infraestructura.Entities.MultimediaProducto", b =>
                {
                    b.Property<int>("idMultimedia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.Property<string>("url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idMultimedia");

                    b.HasIndex("idProducto");

                    b.ToTable("catMultimediaXProducto");
                });

            modelBuilder.Entity("Catalogos.Infraestructura.Entities.Producto", b =>
                {
                    b.Property<int>("idProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Calificacion")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnAlmacen")
                        .HasColumnType("bit");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NivelAdvertencia")
                        .HasColumnType("int");

                    b.Property<int>("NivelInventario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PesoKg")
                        .HasColumnType("float");

                    b.Property<double>("Prioridad")
                        .HasColumnType("float");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("float");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idCatalogo")
                        .HasColumnType("int");

                    b.Property<int>("idUsuarioCrea")
                        .HasColumnType("int");

                    b.Property<double>("iva")
                        .HasColumnType("float");

                    b.HasKey("idProducto");

                    b.HasIndex("idCatalogo");

                    b.HasIndex("idUsuarioCrea");

                    b.ToTable("catProductos");
                });

            modelBuilder.Entity("Catalogos.Infraestructura.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PrimerApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Catalogos.Infraestructura.Entities.Catalogo", b =>
                {
                    b.HasOne("Catalogos.Infraestructura.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idUsuarioCrea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Catalogos.Infraestructura.Entities.Descuento", b =>
                {
                    b.HasOne("Catalogos.Infraestructura.Entities.Producto", "Producto")
                        .WithOne("Descuento")
                        .HasForeignKey("Catalogos.Infraestructura.Entities.Descuento", "idProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Catalogos.Infraestructura.Entities.MultimediaCatalogo", b =>
                {
                    b.HasOne("Catalogos.Infraestructura.Entities.Catalogo", null)
                        .WithMany("Multimedia")
                        .HasForeignKey("idCatalogo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Catalogos.Infraestructura.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idUsuarioCrea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Catalogos.Infraestructura.Entities.MultimediaProducto", b =>
                {
                    b.HasOne("Catalogos.Infraestructura.Entities.Producto", null)
                        .WithMany("Multimedia")
                        .HasForeignKey("idProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Catalogos.Infraestructura.Entities.Producto", b =>
                {
                    b.HasOne("Catalogos.Infraestructura.Entities.Catalogo", "Catalogo")
                        .WithMany()
                        .HasForeignKey("idCatalogo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Catalogos.Infraestructura.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idUsuarioCrea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
