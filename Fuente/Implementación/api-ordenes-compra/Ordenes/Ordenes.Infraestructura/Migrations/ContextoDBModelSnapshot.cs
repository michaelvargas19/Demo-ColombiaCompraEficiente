// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ordenes.Infraestructura.SettingsDB;

namespace Ordenes.Infraestructura.Migrations
{
    [DbContext(typeof(ContextoDB))]
    partial class ContextoDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ordenes.Infraestructura.Entities.Descuento", b =>
                {
                    b.Property<int>("idDescuento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Porcentaje")
                        .HasColumnType("float");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.HasKey("idDescuento");

                    b.HasIndex("idProducto")
                        .IsUnique();

                    b.ToTable("catDescuentosXProducto");
                });

            modelBuilder.Entity("Ordenes.Infraestructura.Entities.OrdenCompra", b =>
                {
                    b.Property<int>("idOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idEstado")
                        .HasColumnType("int");

                    b.Property<int?>("idPago")
                        .HasColumnType("int");

                    b.Property<int>("idUsuarioCrea")
                        .HasColumnType("int");

                    b.Property<bool>("indHabilitado")
                        .HasColumnType("bit");

                    b.Property<double>("valorTotal")
                        .HasColumnType("float");

                    b.HasKey("idOrden");

                    b.HasIndex("idEstado");

                    b.HasIndex("idPago");

                    b.HasIndex("idUsuarioCrea");

                    b.ToTable("ordOrdenCompra");
                });

            modelBuilder.Entity("Ordenes.Infraestructura.Entities.OrdenCompraDetalle", b =>
                {
                    b.Property<long>("idDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("idOrden")
                        .HasColumnType("int");

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.Property<int>("idUsuarioCrea")
                        .HasColumnType("int");

                    b.Property<bool>("indHabilitado")
                        .HasColumnType("bit");

                    b.HasKey("idDetalle");

                    b.HasIndex("idOrden");

                    b.HasIndex("idProducto");

                    b.HasIndex("idUsuarioCrea");

                    b.ToTable("ordOrdenCompraDetalle");
                });

            modelBuilder.Entity("Ordenes.Infraestructura.Entities.OrdenCompraEstado", b =>
                {
                    b.Property<int>("idEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idEstado");

                    b.ToTable("ordOrdenCompraEstado");
                });

            modelBuilder.Entity("Ordenes.Infraestructura.Entities.Pago", b =>
                {
                    b.Property<int>("idPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("fechaPago")
                        .HasColumnType("datetime2");

                    b.Property<int>("idOrden")
                        .HasColumnType("int");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.Property<bool>("indHabilitado")
                        .HasColumnType("bit");

                    b.HasKey("idPago");

                    b.HasIndex("idUsuario");

                    b.ToTable("ordPagos");
                });

            modelBuilder.Entity("Ordenes.Infraestructura.Entities.Producto", b =>
                {
                    b.Property<int>("idProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EnAlmacen")
                        .HasColumnType("bit");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("NivelAdvertencia")
                        .HasColumnType("int");

                    b.Property<int>("NivelInventario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PesoKg")
                        .HasColumnType("float");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("float");

                    b.Property<double>("iva")
                        .HasColumnType("float");

                    b.HasKey("idProducto");

                    b.ToTable("catProductos");
                });

            modelBuilder.Entity("Ordenes.Infraestructura.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PrimerApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Ordenes.Infraestructura.Entities._AuditoriaOrdenes", b =>
                {
                    b.Property<long>("idLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Entidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsError")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parametros")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idLog");

                    b.ToTable("_AuditoriaOrdenes");
                });

            modelBuilder.Entity("Ordenes.Infraestructura.Entities.Descuento", b =>
                {
                    b.HasOne("Ordenes.Infraestructura.Entities.Producto", "Producto")
                        .WithOne("Descuento")
                        .HasForeignKey("Ordenes.Infraestructura.Entities.Descuento", "idProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ordenes.Infraestructura.Entities.OrdenCompra", b =>
                {
                    b.HasOne("Ordenes.Infraestructura.Entities.OrdenCompraEstado", "Estado")
                        .WithMany()
                        .HasForeignKey("idEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ordenes.Infraestructura.Entities.Pago", "Pago")
                        .WithMany()
                        .HasForeignKey("idPago");

                    b.HasOne("Ordenes.Infraestructura.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idUsuarioCrea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ordenes.Infraestructura.Entities.OrdenCompraDetalle", b =>
                {
                    b.HasOne("Ordenes.Infraestructura.Entities.OrdenCompra", null)
                        .WithMany("Detalle")
                        .HasForeignKey("idOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ordenes.Infraestructura.Entities.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("idProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ordenes.Infraestructura.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idUsuarioCrea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ordenes.Infraestructura.Entities.Pago", b =>
                {
                    b.HasOne("Ordenes.Infraestructura.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
